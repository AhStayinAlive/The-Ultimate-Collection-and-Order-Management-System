<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders</title>
    <link rel="stylesheet" href="/styles/orders.css">
</head>
<body>
    <div class="main">
        {{>navbar}}
        {{>gridheader}}
        <div class="catalogue">
            <h1>Order List</h1>
            <table class="orders-table">
                <thead>
                    <tr>
                        <th>Order No.</th>
                        <th>Date</th>
                        <th>Total Order Quantity</th>
                        <th>Payment Method</th>
                        <th>Fulfillment Status</th>
                        <th>Payment Status</th>
                        <th>Total</th>
                        <th>Items</th>
                    </tr>
                </thead>
                <tbody id="orders-body">
                    {{#each initialOrders}}
                    <tr>
                        <td>{{orderNo}}</td>
                        <td>{{formatDate date}}</td>
                        <td>{{totalOrderQuantity}}</td>
                        <td>{{paymentMethod}}</td>
                        <td>{{fulfillmentStatus}}</td>
                        <td>{{paymentStatus}}</td>
                        <td>{{total}}</td>
                        <td>
                            <ul>
                                {{#each items}}
                                <li>{{name}} - {{quantity}}</li>
                                {{/each}}
                            </ul>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
            <div class="pagination-container">
                <div class="pagination">
                    <button id="prev-button" style="display: none;">Previous</button>
                    <span id="page-number">{{currentPage}}</span>
                    <span>of</span>
                    <span id="total-pages">{{totalPages}}</span>
                    <button id="next-button">Next</button>
                </div>
            </div>
        </div>

        <div id ="add-order-modal"class="modal">
            <div class="modal-content">
               <div class="exit-button">
                    <img src="assets/back.png" alt="" class="exit">
                </div>
                
                <div class="form-title">
                    <h1>ADD ORDER</h1>
                </div>

                <select class="order-from">
                    <option>Order From</option>
                    <option value="instagram">Instagram</option>
                    <option value="tiktok">TikTok</option>
                    <option value="personal">Personal</option>
                </select>
                <input type="date" class="order-date" placeholder="Order Date">
                <input type="text" class="customer-name" placeholder="Customer Name">
                <input type="text" class="customer-contact" placeholder="Customer Contact Number">
                <input type="email" class="customer-email" placeholder="Customer Email Address">
                <input type="text" class="customer-address" placeholder="Customer Address">
                
                <div class="items">
                    <h3>Items Ordered</h3>
                    <div class = "itemdetails">
                        <span>"Self-Portrait" Tee</span>
                        <span>₱885.50</span>
                        <span>1 pc</span>
                        <span>₱800.50</span>
                    </div>
                </div>
                <div class="payment">
                    <h3>Payment</h3>
                    <div>Items: ₱800.50</div>
                    <div>Shipping: ₱85.00</div>
                    <div>Tax: ₱0.00</div>
                    <div>Total: ₱885.50</div>
                </div>
                <select class="payment-method">
                    <option>Payment Method</option>
                    <option value="cash">Cash</option>
                    <option value="gcash">GCash</option>
                    <option value="banktransfer">Bank Transfer</option>
                </select>
                <select class="payment-status">
                    <option>Payment Status</option>
                    <option value="nopayment">No Payment Received</option>
                    <option value="forconfirmation">For Confirmation</option>
                    <option value="paid">Paid</option>
                </select>
                <div class="submit">
                    <button class="submitbtn">Submit</button>
                </div>
            </div>
        </div>

    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const prevButton = document.getElementById('prev-button');
            const nextButton = document.getElementById('next-button');
            const pageNumber = document.getElementById('page-number');
            const totalPages = parseInt(document.getElementById('total-pages').textContent);

            const loadPage = async (page) => {
                try {
                    const response = await fetch(`/orders?page=${page}`, {
                        headers: {
                            'Accept': 'application/json'
                        }
                    });
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    const result = await response.json();
                    const { orders } = result;
                    const tbody = document.getElementById('orders-body');
                    tbody.innerHTML = ''; 

                    orders.forEach(order => {
                        const orderNo = order.orderNo || 'N/A';
                        const date = order.date ? new Date(order.date).toLocaleDateString() : 'N/A';
                        const totalOrderQuantity = order.totalOrderQuantity || 'N/A';
                        const paymentMethod = order.paymentMethod || 'N/A';
                        const fulfillmentStatus = order.fulfillmentStatus || 'N/A';
                        const paymentStatus = order.paymentStatus || 'N/A';
                        const total = order.total || 'N/A';
                        const items = order.items && Array.isArray(order.items)
                            ? order.items.map(item => `<li>${item.name || 'N/A'} - ${item.quantity || 'N/A'}</li>`).join('')
                            : '<li>N/A</li>';

                        const tr = document.createElement('tr');
                        tr.innerHTML = `
                            <td>${orderNo}</td>
                            <td>${date}</td>
                            <td>${totalOrderQuantity}</td>
                            <td>${paymentMethod}</td>
                            <td>${fulfillmentStatus}</td>
                            <td>${paymentStatus}</td>
                            <td>${total}</td>
                            <td>
                                <ul>${items}</ul>
                            </td>
                        `;
                        tbody.appendChild(tr);
                    });

                    pageNumber.textContent = page;
                    prevButton.style.display = page <= 1 ? 'none' : 'inline-block';
                    nextButton.style.display = page >= totalPages ? 'none' : 'inline-block';
                } catch (error) {
                    console.error('Error fetching more orders:', error);
                }
            };

            nextButton.addEventListener('click', () => {
                const currentPage = parseInt(pageNumber.textContent);
                if (currentPage < totalPages) {
                    loadPage(currentPage + 1);
                }
            });

            prevButton.addEventListener('click', () => {
                const currentPage = parseInt(pageNumber.textContent);
                if (currentPage > 1) {
                    loadPage(currentPage - 1);
                }
            });

            loadPage(parseInt(pageNumber.textContent));

            // Modal functionality
            const modal = document.getElementById('add-order-modal');
            const addButton = document.querySelector('.grid-header-add-button');
            const closeButton = document.querySelector('.exit');

            addButton.addEventListener('click', () => {
                modal.style.display = 'flex';
            });

            closeButton.addEventListener('click', () => {
                modal.style.display = 'none';
            });

            window.addEventListener('click', (event) => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>
