<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders</title>
    <link rel="stylesheet" href="/styles/orders.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="/node_modules/three-dots/dist/three-dots.min.css">
    <script src="/scripts/orders.js"></script>

</head>
<body>
    <div class="main">
        {{>navbar}}
        {{>gridheader}}
        <div class="catalogue">
            

            <table class="orders-table">
                <thead>
                    <tr>
                        <th>Order No.</th>
                        <th>Date</th>
                        <th>Total Order Quantity</th>
                        <th>Payment Method</th>
                        <th>Fulfillment Status</th>
                        <th>Payment Status</th>
                        <th>Total</th>
                        <th>Items</th>
                        <th>Shipping Rate</th>
                        <th>Delivery Method</th>
                    </tr>
                </thead>
                <tbody id="orders-body">
                    {{#each initialOrders}}
                        <tr class="orders-row">
                            <td>{{orderNumber}}</td>
                            <td>{{formatDate dateCreated}}</td>
                            <td>{{totalOrderQuantity}}</td>
                            <td>{{paymentMethod}}</td>
                            <td>{{fulfillmentStatus}}</td>
                            <td>{{paymentStatus}}</td>
                            <td>{{total}}</td>
                            <td>
                                <ul>
                                    {{#each items}}
                                        <li>{{this.itemName}} - {{this.quantity}} ({{this.variant}}), SKU: {{this.sku}}, Price: {{this.price}}</li>
                                    {{/each}}
                                </ul>
                            </td>
                            <td>{{shippingRate}}</td>
                            <td>{{deliveryMethod}}</td>
                        </tr>
                    {{/each}}
                </tbody>
            </table>

            <div class="pagination-container">
                <div class="pagination">
                    <button id="prev-button" style="display: none;">Previous</button>
                    <span id="page-number">{{currentPage}}</span>
                    <span>of</span>
                    <span id="total-pages">{{totalPages}}</span>
                    <button id="next-button">Next</button>
                </div>
            </div>

            <div class="upload-container">
                <form id="upload-form" enctype="multipart/form-data">
                    <input type="file" id="csvFileInput" name="csvFile" accept=".csv">
                    <button type="submit">Upload CSV</button>
                </form>
            </div>

        </div>

        <div id ="add-order-modal"class="modal">
            <div class="modal-content">
                <div class="exit-button">
                    <img src="assets/back.png" alt="" class="exit">
                </div>
                
                <div class="form-title">
                    <h1>ADD ORDER</h1>
                </div>

                <input type="dateCreated" class="order-dateCreated" placeholder="Order Date">
                
                <select class="fulfillmentstatus">
                    <option>Fulfillment Status</option>
                    <option value="fulfilled">Fulfilled</option>
                    <option value="canceled">Canceled</option>
                </select>

                <select class="paymentmethod">
                    <option>Payment Method</option>
                    <option value="offline">Offline</option>
                    <option value="online">Online</option>
                </select>

                <select class="paymentstatus">
                    <option>Payment Status</option>
                    <option value="paid">Paid</option>
                    <option value="unpaid">Unpaid</option>
                </select>
                
                <div class="items">
                    <h3>Items Ordered</h3>
                    <div class = "itemdetails">
                        <div class="nameandpic">
                            <img src="uploads/products/self_portrait_tee.png" alt="" class="itempic">
                            <span>"Self-Portrait" Tee</span>
                        </div>
                        <span>₱885.50</span>
                        <span>1 pc</span>
                        <span>₱800.50</span>
                    </div>
                </div>
                <div class="payment">
                    <h3>Payment</h3>
                    <div><span>Items</span> <span>₱800.50</span></div>
                    <div><span>Shipping</span> <span>₱85.00</span></div>
                    <div><span>Tax</span> <span>₱0.00</span></div>
                    <div><span>Total</span> <span>₱885.50</span></div>
                </div>
                <div class="submit">
                    <button class="submitbtn">Submit</button>
                </div>
            </div>
        </div>

    </div>
    <div class="view-product-modal">
        <div class="view-product-content">
            <div class="exit-button">
                <img src="assets/back.png" alt="" class="exit">
            </div>
            <h1>Order #8286</h1>
            <p>Ordered on May 15, 2024 10:32 AM from Instagam</p>

            <div class="items">
                <h3>Items Ordered</h3>
                <div class = "itemdetails">
                    <div class="nameandpic">
                        <img src="uploads/products/self_portrait_tee.png" alt="" class="itempic">
                        <span>"Self-Portrait" Tee</span>
                    </div>
                    <span>₱885.50</span>
                    <span>1 pc</span>
                    <span>Variation</span>
                </div>
            </div>
          
        </div>
    </div>
    <script>

    document.addEventListener('DOMContentLoaded', () => {
        const prevButton = document.getElementById('prev-button');
        const nextButton = document.getElementById('next-button');
        const pageNumber = document.getElementById('page-number');
        let totalPages = parseInt(document.getElementById('total-pages').textContent);


        const loadPage = async (page) => {
            const target = document.body;
            try {
                const response = await fetch(`/orders?page=${page}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const result = await response.json();
                const { orders } = result;
                const tbody = document.getElementById('orders-body');
                tbody.innerHTML = '';
                orders.forEach(order => {
                    const orderNumber = order.orderNumber || 'N/A';
                    const dateCreated = order.dateCreated ? new Date(order.dateCreated).toLocaleDateString() : 'N/A';
                    const totalOrderQuantity = order.totalOrderQuantity || 'N/A';
                    const paymentMethod = order.paymentMethod || 'N/A';
                    const fulfillmentStatus = order.fulfillmentStatus || 'N/A';
                    const paymentStatus = order.paymentStatus || 'N/A';
                    const total = order.total ? `₱${order.total}` : 'N/A';
                    const shippingRate = order.shippingRate || 'N/A';
                    const deliveryMethod = order.deliveryMethod || 'N/A';
                    const items = order.items && Array.isArray(order.items)
                        ? order.items.map((item, index) => `
                            <b>Item Name:</b> ${item.itemName}<br>
                            <b>SKU:</b> ${item.sku}<br>
                            <b>Quantity:</b> ${item.quantity}<br>
                            <b>Price:</b> ₱${item.price}<br>
                        `).join('<br>')
                        : 'No items';

                    const tr = document.createElement('tr');
                    tr.classList.add('orders-row');
                    tr.innerHTML = `
                        <td>${orderNumber}</td>
                        <td>${dateCreated}</td>
                        <td>${totalOrderQuantity}</td>
                        <td>${paymentMethod}</td>
                        <td>${fulfillmentStatus}</td>
                        <td>${paymentStatus}</td>
                        <td>${total}</td>
                        <td>${items}</td>
                        <td>${shippingRate}</td>
                        <td>${deliveryMethod}</td>
                    `;
                    tbody.appendChild(tr);
                });
                pageNumber.textContent = page;
                if (page === 1) {
                    prevButton.style.display = 'none';
                } else {
                    prevButton.style.display = 'inline';
                }
                if (page === totalPages) {
                    nextButton.style.display = 'none';
                } else {
                    nextButton.style.display = 'inline';
                }
            } catch (error) {
                console.error('Error loading page:', error);
            }
        };

        nextButton.addEventListener('click', () => {
            const currentPage = parseInt(pageNumber.textContent);
            if (currentPage < totalPages) {
                loadPage(currentPage + 1);
            }
        });

        prevButton.addEventListener('click', () => {
            const currentPage = parseInt(pageNumber.textContent);
            if (currentPage > 1) {
                loadPage(currentPage - 1);
            }
        });

        // Initial load
        loadPage(1);

            // Modal functionality
            const modal = document.getElementById('add-order-modal');
            const addButton = document.querySelector('.grid-header-add-button');
            const closeButton = document.querySelector('.exit');

            addButton.addEventListener('click', () => {
                modal.style.display = 'flex';
            });

            closeButton.addEventListener('click', () => {
                modal.style.display = 'none';
            });

            window.addEventListener('click', (event) => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });

            // Handle CSV upload
            const uploadForm = document.getElementById('upload-form');
            uploadForm.addEventListener('submit', async (event) => {
                event.preventDefault();
                const formData = new FormData(uploadForm);
                try {
                    const response = await fetch('/upload-csv', {
                        method: 'POST',
                        body: formData
                    });
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    const result = await response.json();
                    console.log('CSV uploaded successfully:', result);
                    // Optionally, reload the page or update the table to reflect new data
                    window.location.reload();
                } catch (error) {
                    console.error('Error uploading CSV:', error);
                }
            });
        });

    </script>
</body>
</html>
